#!/usr/bin/env bash

set -e

let timeout=<%= node['et_cassandra']['repairs']['timeout'] %>
let retries=<%= node['et_cassandra']['repairs']['retries'] %>

<% if node['et_cassandra']['cronitor']['repairs']['enabled'] -%>
/usr/local/bin/cronitor_repairs run
<% end -%>

keyspaces=$(/usr/bin/cqlsh -e 'copy system.schema_keyspaces (keyspace_name) to stdout;' \
  | grep -v '^$\|rows exported\|Starting copy\|Written: ' \
  | sed 's/\r//g' \
  | grep -v '^\(system\|system_traces\|OpsCenter\)$')

for ks in $keyspaces; do
  echo "Running repair on keyspace $ks"

  set +e
  let try=0
  until [ $try -ge $retries ]; do
    /usr/bin/nodetool -h localhost repair "$ks" -pr && break
    retval=$?
    echo "Repair of keyspace ${ks} failed with status ${retval}. Retrying..."
    let try=$[$try+1]
    sleep 5
  done
  set -e

  if [ "$retval" ]; then
    echo "Repair of keyspace ${ks} failed with code ${retval} after ${tries} tries"
    <% if node['et_cassandra']['cronitor']['repairs']['enabled'] -%>
    /usr/local/bin/cronitor_repairs fail
    <% end -%>
    exit $retval
  fi
done

<% if node['et_cassandra']['cronitor']['repairs']['enabled'] -%>
/usr/local/bin/cronitor_repairs complete
<% end -%>
