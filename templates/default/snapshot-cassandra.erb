#!/usr/bin/env bash

set -e

source /etc/cassandra/snapshots.conf

root_dir="<%= node['et_cassandra']['home'] %>"
data_dirs="<%= node['et_cassandra']['config']['data_file_directories'].join(' ') %>"
work_dir="${root_dir}/backup_work_dir"

mkdir -p "${work_dir}"

# Performs the snapshot and gets the ID
snapshot_id=`nodetool -h localhost snapshot | \
             grep 'Snapshot directory: ' | \
             awk '{print $3}'`

let dir_index=0

for data_dir in $data_dirs; do
  for keyspace in `find $data_dir -maxdepth 1 -mindepth 1 -type d -exec basename {} \;`; do
    tarball="${work_dir}/$keyspace-$dir_index-`date +%Y-%m-%dT%H%M%S`.tar.gz"

    if stat */*/snapshots/$snapshot_id; then
      tar -czf "$tarball" \
        -C `dirname $data_dir` \
        */*/snapshots/$snapshot_id

      trap "rm -f $tarball; exit" INT TERM EXIT

      /usr/local/bin/s3put \
        --access_key $AWS_ACCESS_KEY_ID \
        --secret_key $AWS_SECRET_ACCESS_KEY \
        --bucket $BUCKET \
        --prefix "$work_dir" \
        --key_prefix "cassandra/<%= node.chef_environment %>/$snapshot_id" \
        "$tarball"

      rm -f "$tarball"

      trap - INT TERM EXIT
    else
      echo "Nothing to back up in */*/snapshots/$snapshot_id"
    fi
  done
  let dir_index++
done
