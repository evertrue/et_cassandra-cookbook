#!/usr/bin/env bash

set -e

<% if node['et_cassandra']['cronitor']['backups_snapshot']['enabled'] -%>
/usr/local/bin/cronitor_backups_snapshot run
<% end -%>

source /etc/cassandra/snapshots.conf

root_dir=`dirname "<%= node['et_cassandra']['config']['data_file_directories'].first %>"`
data_dirs="<%= node['et_cassandra']['config']['data_file_directories'].join(' ') %>"
work_dir="${root_dir}/backup_work_dir"
old_pwd="$PWD"

mkdir -p "${work_dir}"

function contained_by {
  local i

  for i in "${@:2}"; do [[ "${i}" == "${1}" ]] && return 0; done
  return 1
}

# First delete all incremental backups
for data_dir in $data_dirs; do
  for keyspace in `find $data_dir -maxdepth 1 -mindepth 1 -type d -exec basename {} \;`; do
    rm -f "$data_dir"/"$keyspace"/*/backups/*
  done
done

# Clear out old snapshots
nodetool -h localhost clearsnapshot

# Perform the snapshot and get the ID
snapshot_id=`nodetool -h localhost snapshot | \
             grep 'Snapshot directory: ' | \
             awk '{print $3}'`

backup_date=`date +%Y-%m-%dT%H%M%S`

let dir_index=1

for data_dir in $data_dirs; do
  for keyspace in `find $data_dir -maxdepth 1 -mindepth 1 -type d -exec basename {} \;`; do
    if contained_by "${keyspace}" "${SKIP_KEYSPACES[@]}"; then continue; fi

    if stat "$data_dir"/"$keyspace"/*/snapshots/$snapshot_id > /dev/null; then
      cd "$data_dir"

      tarball="${work_dir}/$keyspace-$dir_index.tar.gz"
      tar -czf "$tarball" "$keyspace"/*/snapshots/$snapshot_id

      trap "rm -f $tarball; cd \"$old_pwd\"; exit" INT TERM EXIT

      /usr/local/bin/s3cmd put \
        --quiet \
        --access_key $AWS_ACCESS_KEY_ID \
        --secret_key $AWS_SECRET_ACCESS_KEY \
        --server-side-encryption \
        --region $REGION \
        "$tarball" \
        "s3://$BUCKET/cassandra/<%= node.chef_environment %>/<%= node['fqdn'] %>/snapshots/$backup_date/$keyspace-$dir_index.tar.gz"

      rm -f "$tarball"

      trap - INT TERM EXIT
    else
      echo "Nothing to back up in "$data_dir"/"$keyspace"/*/snapshots/$snapshot_id"
    fi
  done
  let dir_index++
done

cd "$old_pwd"

<% if node['et_cassandra']['cronitor']['backups_snapshot']['enabled'] -%>
/usr/local/bin/cronitor_backups_snapshot complete
<% end -%>
